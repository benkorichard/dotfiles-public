#!/bin/bash
 
pydock_home=${HOME}/.pydock

create() {
    local env_name=${1}
    local env_version=${2}

    if [[ ${env_version} == '' ]]
    then
        exit 1
    fi

    local env_home=${pydock_home}/${env_name}

    if [[ ${env_version} == '' ]] || [[ ${env_name} == '' ]]
    then
        echo 'Env name and env version required'
    else

        [[ -d ${env_home} ]] || mkdir -pv ${env_home} >>/dev/null

        docker ps -a | grep -q ${env_name} || \
            docker create --name ${env_name} \
                --label=pydock \
                -v ${PWD}:/app \
                --workdir=/app \
                python:${env_version}-bookworm \
                sleep infinity
    fi
}

destroy() {
    local env_name=${1}

    if [[ ${env_name} == '' ]]
    then
        exit 1
    fi

    docker rm -f ${env_name}

    rm -rf ${pydock_home}/${env_name}
}

shell() {
    local env_name=${1}

    if [[ ${env_name} == '' ]]
    then
        exit 1
    fi

    docker start ${env_name}
    docker exec -it  ${env_name} bash
}

stop() {
    local env_name=${1}

    if [[ ${env_name} == '' ]]
    then
        exit 1
    fi

    docker stop ${env_name}
}

help() {
    echo "Usage: pydock <command> [<args>]"
    echo
    echo "Commands:"
    echo "  create <env_name> <env_version>   Create a new Python environment"
    echo "  destroy <env_name>                Destroy an existing Python environment"
    echo "  shell <env_name>                  Start a shell in the Python environment"
    echo "  stop <env_name>                   Stop the Python environment"
    echo "  list                              List all Python environments"
}

list() {
    local env_name=${1}

    [[ ! -d ${pydock_home} ]] && mkdir -pv ${pydock_home} >>/dev/null

    for i in $(ls ${pydock_home})
    do
        if [[ -z ${env_name} || ${i} == ${env_name} ]]
        then
            echo "${i}"
        fi
    done
}

main() {
    local subc=${1}
    local env_name=${2}
    local env_version=${3}

    if [[ ${subc} == '' ]]
    then
        exit 1
    fi

    [[ ${subc} == 'create' ]] && create ${env_name} ${env_version}

    [[ ${subc} == 'stop' ]] && stop ${env_name}

    [[ ${subc} == 'shell' ]] && shell ${env_name}

    [[ ${subc} == 'list' ]] && list

    [[ ${subc} == 'destroy' ]] && destroy ${env_name}

    [[ ${subc} == 'help' ]] && help
}

main "${@}"